{"ast":null,"code":"var _jsxFileName = \"D:\\\\html and\\\\gnotes\\\\src\\\\component\\\\Myfile.jsx\";\nimport Myfilebody from './Myfilebody';\nimport React, { Component } from 'react';\nimport { Alert, Form, Button, Badge, FormControl, Navbar, Nav } from 'react-bootstrap';\nimport { Breadcrumb, BreadcrumbItem, Spinner } from 'reactstrap';\nimport './bodyallfile.css';\n\nclass Myfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetcher = () => {\n      fetch('https://apinotessh.herokuapp.com/personalfile/getting').then(res => res.json()).then(json => {\n        var iterator = json.data;\n        var arr = [];\n        var arr1 = this.props.allfileavail;\n        iterator.map(data => {\n          if (data.name == this.props.finalname) {\n            arr1.map(originaldata => {\n              if (originaldata.filename == data.filename) {\n                arr.push(originaldata);\n              }\n            });\n          }\n        });\n        this.setState({\n          fileloaded: true,\n          item: arr\n        });\n      });\n    };\n\n    this.state = {\n      fileloaded: false,\n      item: []\n    }; //console.log(this.props.allfileavail)\n  }\n\n  componentDidMount() {\n    this.fetcher();\n  }\n\n  render() {\n    var {\n      fileloaded,\n      item\n    } = this.state;\n    console.log(item);\n\n    if (fileloaded == false) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        bg: \"success\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"My Uploads\"), React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        style: {\n          width: '3rem',\n          height: '3rem'\n        },\n        type: \"grow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Spinner, {\n        style: {\n          width: '3rem',\n          height: '3rem'\n        },\n        type: \"grow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    } else if (item.length == 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        bg: \"success\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"My Uploads\"), React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        variant: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"No Files to show\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        bg: \"success\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"My Uploads\"), React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"tablet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Date Modified\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Uploaded by\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Size\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"ContentType\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, item.map(data => React.createElement(Tableview, {\n        filer: data,\n        key: data._id,\n        owned: this.props.nextstage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Myfile;","map":{"version":3,"sources":["D:/html and/gnotes/src/component/Myfile.jsx"],"names":["Myfilebody","React","Component","Alert","Form","Button","Badge","FormControl","Navbar","Nav","Breadcrumb","BreadcrumbItem","Spinner","Myfile","constructor","props","fetcher","fetch","then","res","json","iterator","data","arr","arr1","allfileavail","map","name","finalname","originaldata","filename","push","setState","fileloaded","item","state","componentDidMount","render","console","log","width","height","length","_id","nextstage"],"mappings":"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","sourcesContent":["import Myfilebody from './Myfilebody'\r\nimport React,{ Component } from 'react';\r\nimport {Alert,Form,Button,Badge,FormControl,Navbar,Nav} from 'react-bootstrap'\r\nimport { Breadcrumb, BreadcrumbItem,Spinner } from 'reactstrap';\r\nimport './bodyallfile.css';\r\nclass Myfile extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            fileloaded:false,\r\n            item:[]\r\n        }\r\n        //console.log(this.props.allfileavail)\r\n    }\r\n    fetcher=()=>{\r\n        fetch('https://apinotessh.herokuapp.com/personalfile/getting')\r\n        .then(res=>res.json())\r\n        .then(json=>{\r\n            var iterator=json.data\r\n            var arr=[]\r\n            var arr1=this.props.allfileavail\r\n            iterator.map(data=>{\r\n                if(data.name==this.props.finalname){\r\n                    arr1.map(originaldata=>{\r\n                        if(originaldata.filename==data.filename){\r\n                            arr.push(originaldata)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            this.setState({\r\n                fileloaded:true,\r\n                item:arr\r\n            })\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.fetcher();\r\n    }\r\n    render(){\r\n        var {fileloaded,item}=this.state\r\n        console.log(item)\r\n        if(fileloaded==false){\r\n            return (\r\n                <div>\r\n                    <Navbar bg=\"success\" variant=\"light\">\r\n                        <Navbar.Brand>My Uploads</Navbar.Brand>\r\n                        <Nav className=\"mr-auto\">\r\n                        </Nav>\r\n                        {/* <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search for Files\" className=\"mr-sm-2\" onChange={this.changer}/>\r\n                        <Button variant=\"outline-primary\">Search</Button>\r\n                        </Form> */}\r\n                    </Navbar>\r\n                    <br/>\r\n                    <center>\r\n                        <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\r\n                        <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\r\n                    </center>\r\n                </div>\r\n            )\r\n        }\r\n        else if(item.length==0){\r\n            return (\r\n                <div>\r\n                    <Navbar bg=\"success\" variant=\"light\">\r\n                        <Navbar.Brand>My Uploads</Navbar.Brand>\r\n                        <Nav className=\"mr-auto\">\r\n                        </Nav>\r\n                        {/* <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search for Files\" className=\"mr-sm-2\" onChange={this.changer}/>\r\n                        <Button variant=\"outline-primary\">Search</Button>\r\n                        </Form> */}\r\n                    </Navbar>\r\n                    <br/>\r\n                    <Alert variant='danger'>\r\n                        No Files to show\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <Navbar bg=\"success\" variant=\"light\">\r\n                        <Navbar.Brand>My Uploads</Navbar.Brand>\r\n                        <Nav className=\"mr-auto\">\r\n                        </Nav>\r\n                        {/* <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search for Files\" className=\"mr-sm-2\" onChange={this.changer}/>\r\n                        <Button variant=\"outline-primary\">Search</Button>\r\n                        </Form> */}\r\n                    </Navbar>\r\n                    <br/>\r\n                    <div className=\"tablet\">\r\n                        <Table striped>\r\n                            <thead>\r\n                                <tr>\r\n                                <th></th>\r\n                                <th>Name</th>\r\n                                <th>Date Modified</th>\r\n                                <th>Uploaded by</th>\r\n                                <th>Size</th>\r\n                                <th>ContentType</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {item.map(data=>\r\n                                    <Tableview filer={data} key={data._id} owned={this.props.nextstage}/>\r\n                                )}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div><br/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Myfile"]},"metadata":{},"sourceType":"module"}