{"ast":null,"code":"var _jsxFileName = \"D:\\\\html and\\\\gnotes\\\\src\\\\component\\\\Myfilebody.jsx\";\nimport React, { Component } from 'react';\nimport './bodyallfile.css';\nimport { Alert, Form, Button, Badge, FormControl, Navbar, Nav } from 'react-bootstrap';\nimport { GoFile, GoFileMedia, GoFilePdf } from \"react-icons/go\";\nimport { AiFillFilePpt, AiFillFileWord } from \"react-icons/ai\";\n\nclass Myfilebody extends React.Component {\n  constructor(props) {\n    super(props); //console.log(this.props.filer._id)\n\n    var data = this.props.filer;\n    var filename = data.filename;\n    var modifiedfilename = filename.split('.');\n    var uploaddate = data.uploadDate;\n    var modifieduploaddate = uploaddate.split('T');\n    var size = Math.round(data.length / 1024);\n    var modifiedsize = '';\n\n    if (size < 513) {\n      modifiedsize = size.toString() + ' KB';\n    } else {\n      size = Math.round(size / 1024);\n      modifiedsize = size.toString() + ' MB';\n    }\n\n    var iteration = this.props.owned;\n    var owner = '';\n    var contentsize = modifiedfilename.length;\n    this.state = {\n      name: modifiedfilename[0],\n      date: modifieduploaddate[0],\n      Uploadedby: owner,\n      size: modifiedsize,\n      content: modifiedfilename[contentsize - 1],\n      link: 'https://apinotessh.herokuapp.com/files/' + data.filename\n    };\n  }\n\n  render() {\n    var {\n      name,\n      date,\n      Uploadedby,\n      size,\n      content,\n      link\n    } = this.state;\n\n    if (content == 'jpeg' || content == 'jpg' || content == 'png') {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"tabular\",\n        href: link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(GoFileMedia, {\n        className: \"fileadjuster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, date), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        onClick: this.deleter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Delete\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, size), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, content));\n    } else if (content == 'pdf') {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"tabular\",\n        href: link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(GoFilePdf, {\n        className: \"fileadjuster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, date), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Danger\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, size), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, content));\n    } else if (content == 'ppt') {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"tabular\",\n        href: link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(AiFillFilePpt, {\n        className: \"fileadjuster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, date), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Delete\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, size), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, content));\n    } else if (content == 'docx') {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"tabular\",\n        href: link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(AiFillFileWord, {\n        className: \"fileadjuster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, date), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, Uploadedby), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, size), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, content));\n    } else {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"tabular\",\n        href: link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(GoFile, {\n        className: \"fileadjuster\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, date), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, Uploadedby), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, size), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, content));\n    }\n  }\n\n}\n\nexport default Myfilebody;","map":{"version":3,"sources":["D:/html and/gnotes/src/component/Myfilebody.jsx"],"names":["React","Component","Alert","Form","Button","Badge","FormControl","Navbar","Nav","GoFile","GoFileMedia","GoFilePdf","AiFillFilePpt","AiFillFileWord","Myfilebody","constructor","props","data","filer","filename","modifiedfilename","split","uploaddate","uploadDate","modifieduploaddate","size","Math","round","length","modifiedsize","toString","iteration","owned","owner","contentsize","state","name","date","Uploadedby","content","link","render","deleter"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\r\nimport './bodyallfile.css';\r\nimport {Alert,Form,Button,Badge,FormControl,Navbar,Nav} from 'react-bootstrap'\r\nimport { GoFile,GoFileMedia,GoFilePdf } from \"react-icons/go\";\r\nimport { AiFillFilePpt,AiFillFileWord } from \"react-icons/ai\";\r\nclass Myfilebody extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        //console.log(this.props.filer._id)\r\n        var data=this.props.filer\r\n        var filename=data.filename\r\n        var modifiedfilename=filename.split('.')\r\n        var uploaddate=data.uploadDate\r\n        var modifieduploaddate=uploaddate.split('T')\r\n        var size=Math.round(data.length/1024)\r\n        var modifiedsize=''\r\n        if(size<513){\r\n            modifiedsize=size.toString()+' KB'\r\n        }\r\n        else{\r\n            size=Math.round(size/1024)\r\n            modifiedsize=size.toString()+' MB'\r\n        }\r\n        var iteration=this.props.owned\r\n        var owner=''\r\n        var contentsize=modifiedfilename.length\r\n        this.state={\r\n            name:modifiedfilename[0],\r\n            date:modifieduploaddate[0],\r\n            Uploadedby:owner,\r\n            size:modifiedsize,\r\n            content:modifiedfilename[contentsize-1],\r\n            link:'https://apinotessh.herokuapp.com/files/'+data.filename\r\n        }\r\n    }\r\n    render(){\r\n        var {name,date,Uploadedby,size,content,link}=this.state\r\n        if(content=='jpeg' || content=='jpg' || content=='png'){\r\n            return (\r\n                <tr>\r\n                    <th scope=\"row\"><a className=\"tabular\" href={link}><GoFileMedia className=\"fileadjuster\"/></a></th>\r\n                    <td>{name}</td>\r\n                    <td>{date}</td>\r\n                    <td><Button variant=\"danger\" onClick={this.deleter}>Delete</Button></td>\r\n                    <td>{size}</td>\r\n                    <td>{content}</td>\r\n                </tr>\r\n            )\r\n        }\r\n        else if(content=='pdf'){\r\n            return (\r\n                <tr>\r\n                    <th scope=\"row\"><a className=\"tabular\" href={link}><GoFilePdf className=\"fileadjuster\"/></a></th>\r\n                    <td>{name}</td>\r\n                    <td>{date}</td>\r\n                    <td><Button variant=\"danger\">Danger</Button></td>\r\n                    <td>{size}</td>\r\n                    <td>{content}</td>\r\n                </tr>\r\n            )\r\n        }\r\n        else if(content=='ppt'){\r\n            return (\r\n                <tr>\r\n                    <th scope=\"row\"><a className=\"tabular\" href={link}><AiFillFilePpt className=\"fileadjuster\"/></a></th>\r\n                    <td>{name}</td>\r\n                    <td>{date}</td>\r\n                    <td><Button variant=\"danger\">Delete</Button></td>\r\n                    <td>{size}</td>\r\n                    <td>{content}</td>\r\n                </tr>\r\n            )\r\n        }\r\n        else if(content=='docx'){\r\n            return (\r\n                <tr>\r\n                    <th scope=\"row\"><a className=\"tabular\" href={link}><AiFillFileWord className=\"fileadjuster\"/></a></th>\r\n                    <td>{name}</td>\r\n                    <td>{date}</td>\r\n                    <td>{Uploadedby}</td>\r\n                    <td>{size}</td>\r\n                    <td>{content}</td>\r\n                </tr>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <tr>\r\n                    <th scope=\"row\"><a className=\"tabular\" href={link}><GoFile className=\"fileadjuster\"/></a></th>\r\n                    <td>{name}</td>\r\n                    <td>{date}</td>\r\n                    <td>{Uploadedby}</td>\r\n                    <td>{size}</td>\r\n                    <td>{content}</td>\r\n                </tr>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Myfilebody"]},"metadata":{},"sourceType":"module"}