{"ast":null,"code":"var _jsxFileName = \"D:\\\\html and\\\\gnotes\\\\src\\\\component\\\\answercard.jsx\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Card, ListGroup, InputGroup, FormControl, Button } from 'react-bootstrap';\n\nclass Answercard extends Component {\n  constructor(props) {\n    super(props); //console.log(this.props.id)\n\n    this.newchange = event => {\n      this.setState({\n        valueof: event.target.value,\n        ghi: this.state.ghi\n      });\n    };\n\n    this.clicker = event => {\n      //console.log('clicked')\n      if (this.state.valueof == '') {\n        alert('enter text');\n        return;\n      } else {\n        var data = {\n          comment: this.state.valueof\n        };\n        var url = 'https://apinotessh.herokuapp.com/comment/post/' + this.props.id;\n        axios.post(url, data).then(res => {\n          this.setState({\n            valueof: '',\n            ghi: this.state.ghi\n          });\n        });\n      }\n    };\n\n    var size = this.props.orgvalue.answer;\n    var l = Array.isArray(size);\n    var m = 0;\n\n    if (l == false) {\n      if (size == null) {\n        m = 0;\n      } else {\n        m = m + 1;\n      }\n    } else {\n      m = m + 2;\n    }\n\n    console.log(m);\n    this.state = {\n      valueof: '',\n      ghi: m\n    };\n  }\n\n  render() {\n    var {\n      valueof,\n      ghi\n    } = this.state;\n\n    if (ghi > 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Card, {\n        id: this.props.orgvalue._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.orgvalue.question), React.createElement(ListGroup, {\n        variant: \"flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.orgvalue.answer.map(cun => React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, cun))), React.createElement(InputGroup, {\n        style: ({\n          'margin-left': 5\n        }, {\n          'margin-right': 5\n        }),\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        placeholder: \"Type your answer\",\n        \"aria-label\": \"Recipient's username\",\n        \"aria-describedby\": \"basic-addon2\",\n        value: valueof,\n        id: this.props.orgvalue.question,\n        onChange: this.newchange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-secondary\",\n        id: this.props.orgvalue.question,\n        onClick: this.clicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Submit\")))));\n    } else if (ghi == 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Card, {\n        id: this.props.orgvalue._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.props.orgvalue.question), React.createElement(ListGroup, {\n        variant: \"flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.orgvalue.answer))), React.createElement(InputGroup, {\n        style: ({\n          'margin-left': 5\n        }, {\n          'margin-right': 5\n        }),\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        placeholder: \"Type your answer\",\n        \"aria-label\": \"Recipient's username\",\n        \"aria-describedby\": \"basic-addon2\",\n        value: valueof,\n        id: this.props.orgvalue.question,\n        onChange: this.newchange,\n        onSubmit: this.clicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-secondary\",\n        onClick: this.clicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Submit\")))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Card, {\n        id: this.props.orgvalue._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.props.orgvalue.question), React.createElement(ListGroup, {\n        variant: \"flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        style: ({\n          'margin-left': 5\n        }, {\n          'margin-right': 5\n        }),\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        placeholder: \"Type your answer\",\n        \"aria-label\": \"Recipient's username\",\n        \"aria-describedby\": \"basic-addon2\",\n        value: valueof,\n        id: this.props.orgvalue.question,\n        onChange: this.newchange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-secondary\",\n        onClick: this.clicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }\n\n}\n\nexport default Answercard;","map":{"version":3,"sources":["D:/html and/gnotes/src/component/answercard.jsx"],"names":["axios","React","Component","Card","ListGroup","InputGroup","FormControl","Button","Answercard","constructor","props","newchange","event","setState","valueof","target","value","ghi","state","clicker","alert","data","comment","url","id","post","then","res","size","orgvalue","answer","l","Array","isArray","m","console","log","render","_id","question","map","cun"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React,{ Component } from 'react';\r\nimport {Card,ListGroup,InputGroup,FormControl,Button} from 'react-bootstrap'\r\nclass Answercard extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        //console.log(this.props.id)\r\n        var size=this.props.orgvalue.answer\r\n        var l=Array.isArray(size)\r\n        var m=0\r\n        if(l==false){\r\n            if(size==null){ \r\n                m=0\r\n            }\r\n            else{\r\n                m=m+1\r\n            }\r\n        }\r\n        else{\r\n            m=m+2\r\n        }\r\n        console.log(m)\r\n        this.state={\r\n            valueof:'',\r\n            ghi:m\r\n        }\r\n    }\r\n    newchange=(event)=>{\r\n        this.setState({\r\n            valueof:event.target.value,\r\n            ghi:this.state.ghi\r\n        })\r\n    }\r\n    clicker=(event)=>{\r\n        //console.log('clicked')\r\n        if(this.state.valueof==''){\r\n            alert('enter text')\r\n            return\r\n        }\r\n        else{\r\n            var data={\r\n                comment:this.state.valueof\r\n            }\r\n            var url='https://apinotessh.herokuapp.com/comment/post/'+this.props.id\r\n            axios.post(url,data).then(res=>{\r\n                this.setState({\r\n                    valueof:'',\r\n                    ghi:this.state.ghi\r\n                })\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        var {valueof,ghi}=this.state\r\n        if(ghi>1){\r\n        return (\r\n            <div>\r\n                <Card id={this.props.orgvalue._id}>\r\n                        <Card.Header>{this.props.orgvalue.question}</Card.Header>\r\n                        <ListGroup variant=\"flush\">\r\n                            {this.props.orgvalue.answer.map(cun=>\r\n                                <ListGroup.Item>{cun}</ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                        <InputGroup style={{'margin-left':5},{'margin-right':5}} className=\"mb-3\">\r\n                            <FormControl\r\n                            placeholder=\"Type your answer\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={valueof}\r\n                            id={this.props.orgvalue.question}\r\n                            onChange={this.newchange}\r\n                            />\r\n                            <InputGroup.Append>\r\n                            <Button variant=\"outline-secondary\" id={this.props.orgvalue.question} onClick={this.clicker}>Submit</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Card>\r\n            </div>\r\n        )}\r\n        else if(ghi==1){\r\n            return (\r\n                <div>\r\n                    <Card id={this.props.orgvalue._id}>\r\n                            <Card.Header>{this.props.orgvalue.question}</Card.Header>\r\n                            <ListGroup variant=\"flush\">\r\n                            <div><ListGroup.Item>{this.props.orgvalue.answer}</ListGroup.Item></div>\r\n                            </ListGroup>\r\n                            <InputGroup style={{'margin-left':5},{'margin-right':5}} className=\"mb-3\">\r\n                                <FormControl\r\n                                placeholder=\"Type your answer\"\r\n                                aria-label=\"Recipient's username\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                value={valueof}\r\n                                id={this.props.orgvalue.question}\r\n                                onChange={this.newchange}\r\n                                onSubmit={this.clicker}\r\n                                />\r\n                                <InputGroup.Append>\r\n                                <Button variant=\"outline-secondary\" onClick={this.clicker}>Submit</Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Card>\r\n                </div>\r\n            )}\r\n        else{\r\n            return(\r\n            <div>\r\n                <Card id={this.props.orgvalue._id}>\r\n                        <Card.Header>{this.props.orgvalue.question}</Card.Header>\r\n                        <ListGroup variant=\"flush\">\r\n                        </ListGroup>\r\n                        <InputGroup style={{'margin-left':5},{'margin-right':5}} className=\"mb-3\">\r\n                            <FormControl\r\n                            placeholder=\"Type your answer\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={valueof}\r\n                            id={this.props.orgvalue.question}\r\n                            onChange={this.newchange}\r\n                            />\r\n                            <InputGroup.Append>\r\n                            <Button variant=\"outline-secondary\" onClick={this.clicker}>Submit</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Card>\r\n            </div>)\r\n        }    \r\n    }\r\n}\r\n\r\n\r\nexport default Answercard"]},"metadata":{},"sourceType":"module"}