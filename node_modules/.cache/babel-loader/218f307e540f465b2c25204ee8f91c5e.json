{"ast":null,"code":"var _jsxFileName = \"D:\\\\html and\\\\gnotes\\\\src\\\\component\\\\Myfile.jsx\";\nimport Imagebody from './imagebody';\nimport React, { Component } from 'react';\nimport { Form, Button, Badge } from 'react-bootstrap';\nimport { Breadcrumb, Alert, BreadcrumbItem, Spinner } from 'reactstrap';\nimport './bodyallfile.css';\n\nclass Myfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetcher = () => {\n      fetch('https://apinotessh.herokuapp.com/allfileinfo').then(res => res.json()).then(json => {\n        var arr = json.files;\n        var arr1 = [];\n        arr.map(data => {\n          var s = data.filename;\n          arr1.push(s);\n        });\n        this.setState({\n          fileloaded: true,\n          item: arr1\n        });\n      });\n    };\n\n    this.state = {\n      fileloaded: false,\n      item: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetcher();\n  }\n\n  render() {\n    var {\n      fileloaded,\n      item\n    } = this.state;\n\n    if (fileloaded == false) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"My Uploaded Files\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"My Uploaded Files\"), item.map(seconddata => React.createElement(Imagebody, {\n        filer: seconddata,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default Myfile;","map":{"version":3,"sources":["D:/html and/gnotes/src/component/Myfile.jsx"],"names":["Imagebody","React","Component","Form","Button","Badge","Breadcrumb","Alert","BreadcrumbItem","Spinner","Myfile","constructor","props","fetcher","fetch","then","res","json","arr","files","arr1","map","data","s","filename","push","setState","fileloaded","item","state","componentDidMount","render","seconddata"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAAQC,IAAR,EAAaC,MAAb,EAAoBC,KAApB,QAAgC,iBAAhC;AACA,SAASC,UAAT,EAAoBC,KAApB,EAA2BC,cAA3B,EAA0CC,OAA1C,QAAyD,YAAzD;AACA,OAAO,mBAAP;;AACA,MAAMC,MAAN,SAAqBR,SAArB,CAA8B;AAC1BS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,OAPkB,GAOV,MAAI;AACRC,MAAAA,KAAK,CAAC,8CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEME,IAAI,IAAE;AAER,YAAIC,GAAG,GAACD,IAAI,CAACE,KAAb;AACA,YAAIC,IAAI,GAAC,EAAT;AACAF,QAAAA,GAAG,CAACG,GAAJ,CAAQC,IAAI,IAAE;AACV,cAAIC,CAAC,GAACD,IAAI,CAACE,QAAX;AACAJ,UAAAA,IAAI,CAACK,IAAL,CAAUF,CAAV;AACH,SAHD;AAIA,aAAKG,QAAL,CAAc;AACVC,UAAAA,UAAU,EAAC,IADD;AAEVC,UAAAA,IAAI,EAACR;AAFK,SAAd;AAIH,OAdD;AAeH,KAvBiB;;AAEd,SAAKS,KAAL,GAAW;AACPF,MAAAA,UAAU,EAAC,KADJ;AAEPC,MAAAA,IAAI,EAAC;AAFE,KAAX;AAIH;;AAkBDE,EAAAA,iBAAiB,GAAE;AACf,SAAKjB,OAAL;AACH;;AACDkB,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACJ,MAAAA,UAAD;AAAYC,MAAAA;AAAZ,QAAkB,KAAKC,KAA3B;;AACA,QAAGF,UAAU,IAAE,KAAf,EAAqB;AACjB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ;AAOH,KARD,MASI;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAIKC,IAAI,CAACP,GAAL,CAASW,UAAU,IAChB,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAJL,CADJ;AAUH;AACJ;;AAnDyB;;AAuD9B,eAAetB,MAAf","sourcesContent":["import Imagebody from './imagebody'\r\nimport React,{ Component } from 'react';\r\nimport {Form,Button,Badge} from 'react-bootstrap'\r\nimport { Breadcrumb,Alert, BreadcrumbItem,Spinner } from 'reactstrap';\r\nimport './bodyallfile.css';\r\nclass Myfile extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            fileloaded:false,\r\n            item:[]\r\n        }\r\n    }\r\n    fetcher=()=>{\r\n        fetch('https://apinotessh.herokuapp.com/allfileinfo')\r\n        .then(res=>res.json())\r\n        .then(json=>{\r\n        \r\n            var arr=json.files\r\n            var arr1=[]\r\n            arr.map(data=>{\r\n                var s=data.filename\r\n                arr1.push(s)\r\n            })\r\n            this.setState({\r\n                fileloaded:true,\r\n                item:arr1\r\n            })\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.fetcher();\r\n    }\r\n    render(){\r\n        var {fileloaded,item}=this.state\r\n        if(fileloaded==false){\r\n            return (\r\n                <div>\r\n                    <Alert variant=\"secondary\">\r\n                        My Uploaded Files\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <Alert variant=\"secondary\">\r\n                        My Uploaded Files\r\n                    </Alert>\r\n                    {item.map(seconddata=>\r\n                        <Imagebody filer={seconddata} />\r\n                    )}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Myfile"]},"metadata":{},"sourceType":"module"}